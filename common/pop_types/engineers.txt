engineers = {
	texture = "gfx/interface/icons/pops_icons/engineers.dds"
	color = hsv{ 0.07 0.57 0.77 }
	strata = middle
	start_quality_of_life = 10
	wage_weight = 8
	literacy_target = 0.80
	dependent_wage = 0.5	# per year
	unemployment = yes
	ignores_employment_proportionality = no
	
	# 50% - 100% politically engaged
	political_engagement_base = 0.5
	
	political_engagement_mult = {
		value = 1
		
		add = {
			desc = "POP_STARVATION"	
			
			if = {
				limit = { 
					standard_of_living < 5
				}
				value = 1
			}		
		}		

		multiply = {
			desc = "HAS_POLITICAL_AGITATION"	
			value = 1.0	
		}		
	}
	
	qualifications_growth_desc = "ENGINEERS_QUALIFICATIONS_DESC"
	qualifications = {
		#Miraiteko
		if = {
			limit = { 
				is_pop_type = breeders 
				trigger_if = {
					limit = {
						state = { has_variable = breeders_gain_other_qualifications_bonus }
					}
					state.var:breeders_gain_other_qualifications_bonus < 0
				}
				trigger_else = {
					always = yes
				}
			}
			add = {
				value = -500
				desc = "QUALIFICATIONS_MIN_BREEDERS_RATIO"
			}
		}
		else_if = {
			limit = {
				is_peasant_under_serfdom = no 
				literacy_rate > 0.2
			}
			# baseline: ( literacy - 0.2 ) * 5 + ( wealth / 20 ), norm 2.5 for Wealth 20 and Literacy 50%
			add = {
				value = literacy_rate
				subtract = 0.2
				multiply = 10
				desc = "QUALIFICATIONS_LITERACY_FACTOR"
			}
			add = {
				value = wealth
				divide = 20
				desc = "QUALIFICATIONS_WEALTH_FACTOR"
			}
			if = {
				limit = {
					is_pop_type = machinists
				}
				multiply = {
					value = 5
					desc = "QUALIFICATIONS_FAVORED_TYPE"
				}
			}
			if = {
				limit = {
					is_pop_type = clerks
				}
				multiply = {
					value = 4
					desc = "QUALIFICATIONS_FAVORED_TYPE"
				}
			}
		}
		else_if = {
			limit = { 
				is_peasant_under_serfdom = yes 
			}
			value = {
				desc = "QUALIFICATIONS_PEASANTS_UNDER_SERFDOM"
				value = 0
			}
		}
		else = {		
			value = {
				desc = "QUALIFICATIONS_INSUFFICIENT_LITERACY_DECAY"
				value = -2
			}
		}
	}
	
	portrait_age = {
		integer_range = {
			min = define:NPortrait|GRACEFUL_AGING_START
			max = define:NPortrait|GRACEFUL_AGING_END
		}
	}
	portrait_pose = { value = 0 }			
	portrait_is_female = { always = yes }
}
