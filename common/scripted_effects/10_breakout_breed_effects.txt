#出生抚育者比例结算
breeders_ratio_monthly_check = {
	save_scope_as = checked_country
	
	#计算抚育者资质参数
	set_variable = {
		name = min_breeders_ratio
		value = scope:checked_country.modifier:state_min_breeders_ratio_add
	}
	#上限
	set_variable = {
		name = max_breeders_ratio
		value = scope:checked_country.modifier:state_max_breeders_ratio_add
	}
	#如果抚育者人口比例低于下限
	if = {	
		limit = {
			pop_type_percent_country = {
				pop_type = breeders
				percent < var:min_breeders_ratio
			}
		}
		every_scope_state = {
			set_variable = {
				name = breeders_gain_other_qualifications_bonus
				value = -1
			}
			set_variable = {
				name = other_gain_breeders_qualifications_bonus
				value = 1
			}
			random_scope_pop = {
				limit = {
					NOT = { is_pop_type = breeders }
					is_employed = no
				}
				change_poptype =  pop_type:breeders
			}
		}
	}
	else_if = { #如果抚育者人口比例高于上限
		limit = {
			pop_type_percent_country = {
				pop_type = breeders
				percent > var:max_breeders_ratio
			}
		}
		every_scope_state = {
			set_variable = {
				name = other_gain_breeders_qualifications_bonus
				value = -1
			}
			set_variable = {
				name = breeders_gain_other_qualifications_bonus
				value = 1
			}
			random_scope_pop = {
				limit = {
					is_pop_type = breeders
					is_employed = no
				}
				change_poptype =  pop_type:laborers
			}
		}
	}
	else = {
		every_scope_state = {
			set_variable = {
				name = breeders_gain_other_qualifications_bonus
				value = 1
			}
			set_variable = {
				name = other_gain_breeders_qualifications_bonus
				value = 1
			}
		}
	}

	#计算各地区生育力
	every_scope_state = {
		if = {
			limit = { has_modifier = breed_ratio_modifier }
			remove_modifier = breed_ratio_modifier
		}
		breed_ratio_modifier = {
			name = breed_ratio_modifier
			multiplier = breed_ratio
		}
	}
}
