#出生抚育者比例结算
breeders_ratio_monthly_check = {
	save_scope_as = checked_country
	
	#计算抚育者资质参数
	set_variable = {
		name = min_breeders_ratio
		value = scope:checked_country.modifier:state_min_breeders_ratio_add
	}
	#上限
	set_variable = {
		name = max_breeders_ratio
		value = scope:checked_country.modifier:state_max_breeders_ratio_add
	}
	#如果抚育者人口比例低于下限
	if = {	
		limit = {
			pop_type_percent_country = {
				pop_type = breeders
				percent < var:min_breeders_ratio
			}
		}
		every_scope_state = {
			set_variable = {
				name = breeders_gain_other_qualifications_bonus
				value = -1
			}
			set_variable = {
				name = other_gain_breeders_qualifications_bonus
				value = 1
			}
			random_scope_pop = {
				limit = {
					NOT = { is_pop_type = breeders }
					is_employed = no
				}
				change_poptype =  pop_type:breeders
			}
		}
	}
	else_if = { #如果抚育者人口比例高于上限
		limit = {
			pop_type_percent_country = {
				pop_type = breeders
				percent > var:max_breeders_ratio
			}
		}
		every_scope_state = {
			set_variable = {
				name = other_gain_breeders_qualifications_bonus
				value = -1
			}
			set_variable = {
				name = breeders_gain_other_qualifications_bonus
				value = 1
			}
			random_scope_pop = {
				limit = {
					is_pop_type = breeders
					is_employed = no
				}
				change_poptype =  pop_type:laborers
			}
		}
	}
	else = {
		every_scope_state = {
			set_variable = {
				name = breeders_gain_other_qualifications_bonus
				value = 1
			}
			set_variable = {
				name = other_gain_breeders_qualifications_bonus
				value = 1
			}
		}
	}

}

#抚育能力结算
breed_power_monthly_check = {
	save_scope_as = checked_state
	if = {
		limit = { has_modifier = breed_ratio_bonus_modifier }
		remove_modifier = breed_ratio_bonus_modifier
	} 
	if = {
		limit = { has_modifier = breed_ratio_penalty_modifier }
		remove_modifier = breed_ratio_penalty_modifier
	} 
	set_variable = {
		name = state_breed_power
		value = 0
	}
	every_scope_building = {
		state = {
			change_variable = {
				name = state_breed_power
				add = prev.modifier:building_breed_power_add
			}
		}
	}
	set_variable = {
		name = state_breed_ratio
		value = breed_ratio
	}
	set_variable = {
		name = state_breed_ratio_bonus
		value = breed_ratio_bonus
	}
	set_variable = {
		name = state_breed_ratio_penalty
		value = breed_ratio_penalty
	}
	if = {
		limit = { var:state_breed_ratio < 1 }
		add_modifier = {
			name = breed_ratio_penalty_modifier
			multiplier = var:state_breed_ratio_penalty
		}
	}
	else_if = {
		limit = { var:state_breed_ratio > 1 }
		add_modifier = {
			name = breed_ratio_bonus_modifier
			multiplier = var:state_breed_ratio_bonus
		}
	}
}
base_education_access_monthly_check = {
	save_scope_as = checked_state
	if = {
		limit = { has_modifier = base_education_access_modifier }
		remove_modifier = base_education_access_modifier
	} 
	set_variable = {
		name = state_total_breed
		value = 0
	}
	set_variable = {
		name = state_total_elite_breed
		value = 0
	}
	every_scope_building = {
		state = {
			change_variable = {
				name = state_total_breed
				add = prev.modifier:building_output_breed_add
			}
			change_variable = {
				name = state_total_elite_breed
				add = prev.modifier:building_output_elite_breed_add
			}
		}
	}
	set_variable = {
		name = state_base_education_access_ratio
		value = base_education_access_ratio
	}
	if = {
		limit = { var:state_base_education_access_ratio > 0.03 }
		add_modifier = {
			name = base_education_access_modifier
			multiplier = var:state_base_education_access_ratio
		}
	}
}